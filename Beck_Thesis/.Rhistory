library(tidyverse)
library(lubridate)
library(gridExtra)
library(cowplot)
library(tidyverse)
library(lubridate)
theme_set(theme_classic())
rossmann <- read_csv("../../Data/rossmann_train.csv")
rossmann$StateHoliday[is.na(rossmann$StateHoliday)] <- 1
state_hols <- rossmann %>% filter(StateHoliday == 1)
state_hols$Month_Day <- format(state_hols$Date, "%m-%d")
christmas <- state_hols %>% filter(month(Date) == 12)
easter <- state_hols %>% filter(month(Date) == 4) %>% filter(DayOfWeek == 1)
rossmann <- rossmann %>% arrange(Store, Date) %>%
mutate(Open_b4_hol = if_else(lead(StateHoliday) == 1 & Open == 1 & Store == lead(Store) & !is.na(lead(Store)), "Yes", "No"),
Open_after_hol = if_else(lag(StateHoliday) == 1 & Open == 1 & Store == lag(Store) & !is.na(lag(Store)), "Yes", "No"))
b4_avgs <- open %>%
group_by(Store, Open_b4_hol) %>% summarise(avg = mean(Sales, na.rm = T))
open <- rossmann %>% filter(Open == 1)
b4_avgs <- open %>%
group_by(Store, Open_b4_hol) %>% summarise(avg = mean(Sales, na.rm = T))
b4_avgs <- b4_avgs %>%
spread(key = Open_b4_hol, value = avg) %>% mutate(`Change` = Yes - No)
b4_avgs %>% ggplot(aes(x = Change)) + geom_boxplot(na.rm = T) +
annotate("text", x = 3000, y = .2,
label = paste("Change is avg sales of a store on days before a holiday\n",
"minus avg sales on other days for that same store"))
library(tidyverse)
library(lubridate)
set.seed(364)
covid <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv") %>%
rename(County = county, State = state)
covid <- covid %>%
mutate(month=month(date)) %>%
group_by(month, County, State) %>%
summarize(CC=sum(cases))
covid <- covid %>%
select(State, County, CC, month)
pop <- read_csv("populations.csv") %>% mutate(County = str_trim(County), State = str_trim(State)) %>% group_by(County, State) %>% summarize(population = mean(population))
housing <- read_csv("County_zhvi_uc_sfrcondo_tier_0.33_0.67_sm_sa_mon-1.csv")
housing <- housing %>% select(State,RegionName, "2020-01-31","2020-02-29", "2020-03-31", "2020-04-30", "2020-05-31", "2020-06-30", "2020-07-31", "2020-08-31", "2020-09-30")
housing  <- housing %>% unite(new, State, RegionName, sep="_") %>%
gather(value=HV, key=date, "2020-01-31","2020-02-29", "2020-03-31", "2020-04-30", "2020-05-31", "2020-06-30", "2020-07-31", "2020-08-31", "2020-09-30") %>%
separate(new,into=c("State", "County"), sep = "_")
housing$County <- gsub(" County","", housing$County)
housing$County <- gsub("Parish","", housing$County)
housing <- housing %>%
mutate(State = case_when(
State == "AL" ~ "Alabama", State == "AK" ~ "Alaska", State == "AZ" ~ "Arizona", State == "AR" ~ "Arkansas", State == "CA" ~ "California", State == "CO" ~ "Colorado", State == "CT" ~ "Connecticut", State == "DE" ~ "Delaware", State == "DC" ~ "District of Columbia", State == "FL" ~ "Florida", State == "GA" ~ "Georgia", State == "HI" ~ "Hawaii", State == "ID" ~ "Idaho", State == "IL" ~ "Illinois", State == "IN" ~ "Indiana", State == "IA" ~ "Iowa", State == "KS" ~ "Kansas", State == "KY" ~ "Kentucky", State == "LA" ~ "Louisiana", State == "ME" ~ "Maine", State == "MD" ~ "Maryland", State == "MA" ~ "Massachusetts", State == "MI" ~ "Michigan", State == "MN" ~ "Minnesota", State == "MS" ~ "Mississippi", State == "MO" ~ "Missouri", State == "MT" ~ "Montana", State == "NE" ~ "Nebraska", State == "NV" ~ "Nevada", State == "NH" ~ "New Hampshire", State == "NJ" ~ "New Jersey", State == "NM" ~ "New Mexico", State == "NY" ~ "New York", State == "NC" ~ "North Carolina", State == "ND" ~ "North Dakota", State == "OH" ~ "Ohio", State == "OK" ~ "Oklahoma", State == "OR" ~ "Oregon", State == "PA" ~ "Pennsylvania", State == "RI" ~ "Rhode Island", State == "SC" ~ "South Carolina", State == "SD" ~ "South Dakota", State == "TN" ~ "Tennessee", State == "TX" ~ "Texas", State == "UT" ~ "Utah", State == "VT" ~ "Vermont", State == "VA" ~ "Virginia", State == "WA" ~ "Washington", State == "WI" ~ "Wisconsin", State == "WY" ~ "Wyoming", State == "WV" ~ "West Virginia",))
housing <- housing %>%
mutate(month=month(date))
mergeddata <- inner_join(covid, housing, by = c("County", "month", "State"))
#mergeddata <- mergeddata  %>%  mutate(date = as.Date(date))
mergeddata <- arrange(mergeddata, State, County, date)
mergeddata <- mergeddata %>% group_by(State, County) %>% mutate(percentchange = (HV-lag(HV))/lag(HV)*100)
mergeddata <- mergeddata  %>% ungroup() %>% mutate(County = str_trim(County), State = str_trim(State))
mergeddata2 <- left_join(mergeddata, pop, by = c("State","County"))
mergeddata2 <- na.omit(mergeddata2)
mergeddata2 <- mutate(mergeddata2, CC_per_1000=CC/population*1000)
mergeddata2 <-mergeddata2 %>%
mutate(region = case_when(State %in% c("Connecticut",  "Maine", "Massachusetts", "New Hampshire", "Vermont", "New Jersey", "New York", "Pennsylvania") ~ "Northeast",
State %in% c("Illinois", "Indiana","Michigan","Ohio","Wisconsin","Iowa","Kansas", "Minnesota","Missouri","Nebraska","North Dakota","South Dakota") ~ "Midwest",
State %in% c("Delaware" , "Florida" , "Georgia" , "Maryland" , "North Carolina" , "South Carolina" , "Virginia" , "District of Columbia" , "West Virginia" , "Alabama","Kentucky" , "Mississippi" , "Tennessee" , "Arkansas" , "Louisiana" , "Oklahoma" , "Texas") ~ "South" ,
State %in% c("Arizona" , "Colorado" , "Idaho" , "Montana" , "Nevada" , "New Mexico" , "Utah" , "Wyoming" , "Alaska" , "California", "Hawaii" , "Washington") ~ "West"))
twodate <- read_csv("mergeddata.csv")
HVby_state <- mergeddata2 %>%
group_by(State) %>%
summarise(avg=mean(percentchange)) %>%
arrange(desc(avg))
head(HVby_state,n=3)
tail(HVby_state,n=3)
ggplot(HVby_state,aes(y = avg, x=State)) + geom_line() + geom_jitter()
HVby_state %>% filter(State %in% c("New York","California")) %>%
ggplot(aes(y = avg, x= State)) + geom_line() + geom_jitter()
hist(HVby_state$avg)
View(HVby_state)
View(mergeddata2)
desired_areas <- mergeddata2 %>% filter(State %in% c("New York", "California", "Connecticut", "Floria"))
desired_areas <- mergeddata2 %>% filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachussetts"))
desired_areas <- mergeddata2 %>% filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts"))
View(desired_areas)
library(leaflet)
library(leafgl)
write_csv(mergeddata2, "MD2.csv")
desired_areas <- mergeddata2 %>% filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts"))
View(desired_areas)
mergeddata <- inner_join(covid, housing, by = c("County", "month", "State"))
#mergeddata <- mergeddata  %>%  mutate(date = as.Date(date))
mergeddata <- arrange(mergeddata, State, County, date)
mergeddata <- mergeddata %>% group_by(State, County) %>% mutate(HV_percentchange = (HV-lag(HV))/lag(HV)*100,
CC_percentchange = CC_per_1000-lag(CC_per_1000)/lag(CC_per_1000)*100)
View(desired_areas)
View(mergeddata)
desired_areas <- mergeddata2 %>% mutate(CC_percentchange = (CC_per_1000-lag(CC_per_1000))/lag(CC_per_1000)*100) %>%
filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts"))
View(desired_areas)
desired_areas %>% group_by(State,County) %>% ggplot(aes(x = month, y = HV)) %>% geom_line()
desired_areas %>% group_by(State,County) %>% ggplot(aes(x = month, y = HV))+geom_line()
desired_areas %>% group_by(State,County) %>% ggplot(aes(x = month, y = HV))+geom_point()
desired_areas %>% group_by(State,County) %>% ggplot(aes(x = month, y = HV, group = c(State,County)))+geom_point()
desired_areas %>% group_by(State,County) %>% ggplot(aes(x = month, y = HV, group = County))+geom_point()
desired_areas %>% ggplot(aes(x = month, y = HV, group = County))+geom_point()
install.packages("descr")
desired_areas %>% ggplot(aes(x = month, y = HV, color = County)) + geom_point()
HVby_state2 <- mergeddata2 %>%
group_by(State) %>%
summarise(HV_avg=mean(HV),
CC_avg = mean(CC))
HVby_state2 %>% ggplot(aes(x = month, y = HV, color = State)) + geom_point()
HVby_state2 %>% ggplot(aes(x = month, y = HV_avg, color = State)) + geom_point()
HVby_state2 <- mergeddata2 %>%
group_by(State, month) %>%
summarise(HV_avg=mean(HV),
CC_avg = mean(CC))
HVby_state2 %>% ggplot(aes(x = month, y = HV_avg, color = State)) + geom_point()
HVby_state2 %>%
filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = HV_avg, color = State)) + geom_point()
HVby_state2 %>%
filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = CC_avg, color = State)) + geom_point()
library(gridExtra)
grid.arrange(
HVby_state2 %>%
filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = HV_avg, color = State)) + geom_point(),
HVby_state2 %>%
filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = CC_avg, color = State)) + geom_point())
grid.arrange(
HVby_state2 %>%
filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = HV_avg, color = State)) + geom_point(),
HVby_state2 %>%
filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = CC_avg, color = State)) + geom_point() + geom_line())
grid.arrange(
HVby_state2 %>%
filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = HV_avg, color = State)) + geom_point()+ geom_line(),
HVby_state2 %>%
filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = CC_avg, color = State)) + geom_point() + geom_line())
grid.arrange(
HVby_state2 %>%
filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = HV_avg, color = State)) + geom_point()+ geom_line()+ scale_y_log10(),
HVby_state2 %>%
filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = CC_avg, color = State)) + geom_point() + geom_line() + scale_y_log10())
View(mergeddata2)
grid.arrange(
HVby_state2 %>%
filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = HV_avg, color = State)) + geom_point()+ geom_line()+ scale_y_log10(),
HVby_state2 %>%
filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = CC_avg, color = State)) + geom_point() + geom_line() + scale_y_log10())
HVby_state2 <- mergeddata2 %>%
group_by(Region, month) %>%
summarise(HV_avg=mean(HV),
CC_avg = mean(CC))
View(mergeddata2)
HVby_state2 <- mergeddata2 %>%
group_by(region, month) %>%
summarise(HV_avg=mean(HV),
CC_avg = mean(CC))
library(gridExtra)
grid.arrange(
HVby_state2 %>%
#filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = HV_avg, color = region)) + geom_point()+ geom_line()+ scale_y_log10(),
HVby_state2 %>%
#filter(State %in% c("New York", "California", "Connecticut", "Floria", "Massachusetts")) %>%
ggplot(aes(x = month, y = CC_avg, color = region)) + geom_point() + geom_line() + scale_y_log10())
state.abb
state.name
states <- data.frame(code = state.abb, State = state.name)
View(states)
install.packages(c("microbenchmark", "benchmarkme"))
rs = benchmarkme::benchmark_std()
plot(rs)
# Loading in data
library(data.table)
library(readxl)
library(glue)
# Manipulating data
library(tidyverse)
# Conversion
library(PeriodicTable)
# Mapping
library(leaflet)
library(leafgl)
recentRunDate <- "2021-07-14"
# Due to the sparsity of the data, the data will assume many of the columns are "logical" because the first 5,000 rows will be blank. Then every observation in that column will be incorrectly assigned NA. So we first load all columns in as character columns and then convert them to numeric if necessary.
GlAs_database <- glue("../Output/GlAs_Database_{recentRunDate}.csv") %>%
data.table::fread(colClasses = 'character', data.table = FALSE) %>% type_convert()
install.packages("Synth") #for the standard synthetic control method
install.packages("gsynth") #for GSC method
install.packages("cowplot") #for plotting
qnorm(.5)
combn(c('Tati',
'Sue',
'Stefi',
'Rodrigo',
'Oyku',
'Mata',
'Luis',
'Kitti',
'Jess',
'Enaitz',
'Emma',
'Briar',
'Beck',
'Andrei'
), 4)
combn(c('Tati',
'Sue',
'Stefi',
'Rodrigo',
'Oyku',
'Mata',
'Luis',
'Kitti',
'Jess',
'Enaitz',
'Emma',
'Briar',
'Beck',
'Andrei'
), 4) -> x
x
x[1]
combn(c('Tati',
'Sue',
'Stefi',
'Rodrigo',
'Oyku',
'Mata',
'Luis',
'Kitti',
'Jess',
'Enaitz',
'Emma',
'Briar',
'Beck',
'Andrei'
), 4, tabulate) -> x
combn(c('Tati',
'Sue',
'Stefi',
'Rodrigo',
'Oyku',
'Mata',
'Luis',
'Kitti',
'Jess',
'Enaitz',
'Emma',
'Briar',
'Beck',
'Andrei'
), 4, tabulate, bin=4) -> x
combn(c('Tati',
'Sue',
'Stefi',
'Rodrigo',
'Oyku',
'Mata',
'Luis',
'Kitti',
'Jess',
'Enaitz',
'Emma',
'Briar',
'Beck',
'Andrei'
), 4, tabulate, nbins=4) -> x
combn(c('Tati',
'Sue',
'Stefi',
'Rodrigo',
'Oyku',
'Mata',
'Luis',
'Kitti',
'Jess',
'Enaitz',
'Emma',
'Briar',
'Beck',
'Andrei'
), 4, simplify = T) -> x
squad  <- c('Tati',
'Sue',
'Stefi',
'Rodrigo',
'Oyku',
'Mata',
'Luis',
'Kitti',
'Jess',
'Enaitz',
'Emma',
'Briar',
'Beck',
'Andrei')
x <- combinat::combn(squad, 4)
x <- combinat::combn2(squad, 4)
x <- combinat::combn2(x=squad, n=4)
x <- combinat::combn(squad, 4)
x <- combinat::combn(squad, 4) %>% data.frame()
library(tidyverse)
x <- combinat::combn(squad, 4) %>% data.frame()
View(x)
x <- combinat::combn(squad, 4) %>% data.frame() %>% t()
x <- combinat::combn(squad, 4) %>% transpose() %>% data.frame()
x <- combinat::combn(squad, 4) %>% t() %>% data.frame()
View(x)
library(readxl)
library(tidyverse)
setwd("~/My Drive/VU/Thesis/Scripts/Beck_Thesis")
stations <- read_excel('Coast_orientation/stations.xlsx', sheet = 'Selected Stations')
stations <- read_excel('stations.xlsx', sheet = 'Selected Stations')
View(stations)
library(maps)
install.packages("maps")
library(maps)
map("world", fill=TRUE, col="white", bg="gray", ylim=c(-60, 90), mar=c(0,0,0,0))
library(sf)
stations_sf <- stations %>% sf()
stations_sf <- stations %>% sf::as_Spatial(stations)
stations_sf <- stations %>% sf::as_Spatial()
tibble::tribble(stations_sf)
tibble::tribble(stations)
stations %>% as.tibble()
stations %>% as.tibble() %>% geom_sf()
stations <- read_excel('stations.xlsx', sheet = 'Selected Stations') %>%
dplyr::select(Coast, station = Station, lat = Lat, lon = Lon)
stations %>% geom_sf()
stations %>% ggplot() +
geom_sf()
